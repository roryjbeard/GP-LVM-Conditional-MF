{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"KL_qr",
				"KL_qr_u"
			],
			[
				"Phi_",
				"Phi_psd_	statement"
			],
			[
				"K",
				"Kuu"
			],
			[
				"u",
				"u	statement"
			],
			[
				"X",
				"Xf	statement"
			],
			[
				"up",
				"upsilon	statement"
			],
			[
				"det",
				"Det	class"
			],
			[
				"gradie",
				"gradientVariables	statement"
			],
			[
				"gradi",
				"gradientVariables	statement"
			],
			[
				"data",
				"data_miniBatch	statement"
			],
			[
				"N",
				"N_R_vec"
			],
			[
				"P",
				"P_vec	statement"
			],
			[
				"sigm",
				"sigmaInit"
			],
			[
				"sig",
				"sigmaInit"
			],
			[
				"HU",
				"HU_decoder"
			],
			[
				"log",
				"log_L_u"
			],
			[
				"n",
				"n_induce	statement"
			],
			[
				"KL",
				"KL_qr	statement"
			],
			[
				"log_sigma",
				"log_sigma_lhood	statement"
			],
			[
				"mat",
				"matrix_inverse	statement"
			],
			[
				"mu",
				"mu_decoder	statement"
			],
			[
				"h",
				"h_auxiliary	statement"
			],
			[
				"dim",
				"dimZ	statement"
			],
			[
				"z",
				"zfunction	statement"
			],
			[
				"al",
				"all_gradients	statement"
			],
			[
				"Y_",
				"Y_"
			],
			[
				"tra",
				"trigamma	statement"
			],
			[
				"fl",
				"floatX"
			],
			[
				"NotI",
				"NotImplementedError	class"
			],
			[
				"out",
				"outputs_gradients	param"
			],
			[
				"Si",
				"Sigma_Chol	statement"
			],
			[
				"co",
				"constrain_positive"
			],
			[
				"taup",
				"taup_vec_restarts"
			],
			[
				"num",
				"num_good_restarts"
			],
			[
				"comp",
				"compress_ratio"
			],
			[
				"ci",
				"compress_ratio"
			],
			[
				"La",
				"Lambdastar"
			],
			[
				"Lamd",
				"Lambdastar_inv"
			],
			[
				"triu",
				"triu_index_matrix	statement"
			],
			[
				"triu_index",
				"triu_index_matrix_	statement"
			],
			[
				"d_L_d_X",
				"d_L_d_Xp_"
			],
			[
				"d_L_d_L",
				"d_L_d_Lambda_"
			],
			[
				"d_L_dm",
				"d_L_d_m_f	statement"
			],
			[
				"logpw",
				"logpw_yp	statement"
			],
			[
				"stoch",
				"stoch_loss	function"
			],
			[
				"Lam",
				"Lambda_	statement"
			],
			[
				"mut",
				"multivariate_normal	function"
			],
			[
				"pa",
				"parameters"
			],
			[
				"Lambda",
				"Lambda_proj_"
			],
			[
				"d_loss",
				"d_loss_d_eta_	statement"
			],
			[
				"d_loss_d",
				"d_loss_d_theta_	statement"
			],
			[
				"samp",
				"samp_grad_bound_phi_f	statement"
			],
			[
				"logpy",
				"logpy_gradients_eta_f	statement"
			],
			[
				"inte",
				"integrand_f	statement"
			],
			[
				"logq",
				"logqyp_gradients_phi_f	statement"
			],
			[
				"logp",
				"logpyp	statement"
			],
			[
				"q",
				"q_w_mean"
			],
			[
				"K_tilde",
				"K_tilde_evals	statement"
			],
			[
				"K_",
				"K_tilde_evals	statement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "GP_LVM_CMF.py",
			"settings":
			{
				"buffer_size": 15598,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/roryjbeard/DPhil/Code/Variational-Autoencoder/Theano/VariationalAutoencoder.py",
			"settings":
			{
				"buffer_size": 6633,
				"line_ending": "Unix"
			}
		},
		{
			"file": "trainmnist_cond_MF.py",
			"settings":
			{
				"buffer_size": 2139,
				"line_ending": "Unix"
			}
		},
		{
			"file": "VAE_cond_MF.py",
			"settings":
			{
				"buffer_size": 10581,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/roryjbeard/DPhil/Code/CLGP/CLGP_theano_model.py",
			"settings":
			{
				"buffer_size": 8371,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/roryjbeard/DPhil/Code/CLGP/CLGP_theano_opt.py",
			"settings":
			{
				"buffer_size": 9592,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/roryjbeard/DPhil/Code/CLGP/CLGP_theano_example.py",
			"settings":
			{
				"buffer_size": 1444,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 367.0,
		"selected_items":
		[
			[
				"lint",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda",
				"Anaconda: Vagrant Enable"
			],
			[
				"packa c l",
				"Package Control: List Packages"
			],
			[
				"",
				"About"
			],
			[
				"dli",
				"Anaconda: Disable linting on this file"
			],
			[
				"anaconda:di",
				"Anaconda: Disable linting on this file"
			],
			[
				"ancadon",
				"Anaconda: Disable linting on this file"
			],
			[
				"Package Control: INSTALL",
				"Package Control: Install Package"
			],
			[
				"latex",
				"LaTeXTools: Reconfigure and migrate settings"
			],
			[
				"Package Control: Ins",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/Users/roryjbeard/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/roryjbeard/DPhil/GP-LVM-Conditional MF/GPLVMCMF.sublime-project",
		"/Users/roryjbeard/Library/Application Support/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/Users/roryjbeard/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/roryjbeard/DPhil/GP-LVM-Conditional MF/README.md",
		"/Users/roryjbeard/DPhil/GP-LVM-Conditional MF/GP-LVM-CMF.py",
		"/Users/roryjbeard/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/roryjbeard/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/roryjbeard/DPhil/GP-LVM-Conditional MF/trainmnist_cond_MF.py",
		"/Users/roryjbeard/DPhil/Code/iwae/optimizers.py",
		"/Users/roryjbeard/DPhil/Code/Variational-Autoencoder/Theano/demo/trainmnist.py",
		"/Users/roryjbeard/DPhil/Code/iwae/config.py",
		"/Users/roryjbeard/DPhil/Variational Compression/mixture_theano.py",
		"/Users/roryjbeard/DPhil/Variational Compression/IBP_autoencoder_reparam_theano.py",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/compression_noise_expt.py",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/logistic_sgd",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/BLR_MC.py",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/linreg.py",
		"/Users/roryjbeard/Theano/Theano/theano/scalar/basic_scipy.py",
		"/Users/roryjbeard/Theano/Theano/theano/scalar/basic_scipy.pyc",
		"/Users/roryjbeard/DPhil/Variational Compression/digamma_for_theano.py",
		"/Users/roryjbeard/DPhil/Variational Compression/IBP_autoencoder_quad.py",
		"/Users/roryjbeard/DPhil/Variational Compression/IBP_autoencoder_reparam.py",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/compression_noise_expt",
		"/Users/roryjbeard/DPhil/Confirmation/Plan for remainder.tex",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/gradient_bound.tex",
		"/Users/roryjbeard/DPhil/Confirmation/README.md",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/linregARD.py",
		"/Users/roryjbeard/DPhil/Variational-Compression-Github/ARD_VC_GP.tex",
		"/Users/roryjbeard/DPhil/Variational Compression/blr_derivation.tex",
		"/Users/roryjbeard/DPhil/Confirmation/refs.bib",
		"/Users/roryjbeard/DPhil/Confirmation/Chapter cuttings.tex",
		"/Users/roryjbeard/DPhil/Confirmation/Chapter.tex",
		"/Users/roryjbeard/DPhil/Variational Compression/blr_derivation",
		"/Users/roryjbeard/Dropbox/Community Switching SSM/Documents/VBEMsuppmat.tex",
		"/Users/roryjbeard/Dropbox/pargsvn/rory/transfer/test.tex",
		"/Users/roryjbeard/DPhil/Code/GPy/GPy/GPy/core/parameterization/param.py",
		"/Users/roryjbeard/DPhil/Code/GPy/GPy/GPy/core/model.py",
		"/Users/roryjbeard/Documents/Tea talks/MCMC VB bridge gap/tea_talk_Salimans.tex",
		"/Users/roryjbeard/Dropbox/pargsvn/rory/transfer/Literature Review/litrev.tex",
		"/Users/roryjbeard/Documents/tea_talk_Salimans.tex",
		"/Users/roryjbeard/DPhil/Variational Compression/old.ipynb"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			",\n",
			"self",
			"Phi",
			"self.Xu",
			"Xu.T",
			"kappa",
			"upsilon",
			"Kuu",
			"Upsilon",
			"xi",
			"prior",
			"log_q_f_u",
			"log_q_fX",
			"log_q_fuX",
			"log_r_fuX_z",
			"self.currentBatch",
			"self.current",
			"alpha",
			"Q_M_matc",
			"Q_M_mat",
			"dimXu",
			"dimXf",
			"dimX",
			"mu_encoder",
			"lint",
			"mu_encoder",
			"W1",
			"eps_u",
			"dimXf",
			"dimX",
			"N",
			"T.tril",
			"tril",
			"ls",
			"n_induce",
			"m_u",
			"W8",
			"W7",
			"W6",
			"epoch",
			"data",
			"eps_z",
			"dimX",
			"X",
			"sigma_var_lhood",
			"L_z",
			"\n        ",
			"eps_z",
			"dimXf",
			"sigma_lhood",
			"L_u",
			"mu_decoder",
			"continuous",
			"eps_f",
			"eps",
			"b6",
			"W6",
			"self.all_gradients",
			"all_bounds",
			"create",
			"gradientfun",
			"self.lowerbound",
			"self.L",
			"X2",
			"X1",
			"lincomp",
			"phi",
			"open",
			"equation",
			".\n",
			"equation",
			"mat",
			")",
			"]",
			"yp",
			"	",
			"flat_to_psd_mat",
			"flat",
			"Lambda",
			"tau",
			"tau,",
			"tau",
			"taup",
			"tau",
			"Lamda",
			"section",
			"equation",
			"num_restarts",
			"q_w_mean",
			"Y",
			"taup",
			"()\n",
			"w",
			"path",
			",\\",
			"Y",
			"\\mathbf{x}",
			"text"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"    "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "GP_LVM_CMF.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15598,
						"regions":
						{
						},
						"selection":
						[
							[
								9405,
								9405
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 58.0,
						"translation.y": 2867.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/roryjbeard/DPhil/Code/Variational-Autoencoder/Theano/VariationalAutoencoder.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6633,
						"regions":
						{
						},
						"selection":
						[
							[
								6249,
								6254
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1220.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "trainmnist_cond_MF.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2139,
						"regions":
						{
						},
						"selection":
						[
							[
								1311,
								1311
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "VAE_cond_MF.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10581,
						"regions":
						{
						},
						"selection":
						[
							[
								365,
								365
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/roryjbeard/DPhil/Code/CLGP/CLGP_theano_model.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8371,
						"regions":
						{
						},
						"selection":
						[
							[
								631,
								633
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/roryjbeard/DPhil/Code/CLGP/CLGP_theano_opt.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9592,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 196.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/roryjbeard/DPhil/Code/CLGP/CLGP_theano_example.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1444,
						"regions":
						{
						},
						"selection":
						[
							[
								482,
								485
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "GPLVMCMF.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
